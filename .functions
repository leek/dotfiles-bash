#!/bin/bash

function myip {
    res=$(curl -s checkip.dyndns.org | grep -Eo '[0-9\.]+')
    echo "$res"
    if [[ "$OSTYPE" =~ ^darwin ]]; then
        `echo "$res" | pbcopy`
    fi
}

function trash() {
    mv $@ ~/.Trash/
}

function service() {
    if [ $# -lt 2 ]; then
        echo "Usage : $0 [service] [start|stop|restart]"
        exit
    fi

    case "$1" in
    'nginx' )
        case "$2" in
        'start' )
            sh -c "/usr/local/sbin/nginx"
        esac
        ;;
    'mongodb' )
        case "$2" in
        'start' )
            sh -c "sudo mongod run --config /usr/local/etc/mongod.conf"
        esac
        ;;
    'mysql' )
        case "$2" in
        'start' )
            sh -c "mysql.server start"
        esac
        ;;
    'php53' )
        case "$2" in
        'start' )
            sh -c "$(brew --prefix php53)/sbin/php-fpm --fpm-config /usr/local/etc/php/5.3/php-fpm.conf"
        esac
        ;;
    'php54' )
        case "$2" in
        'start' )
            sh -c "$(brew --prefix php54)/sbin/php-fpm --fpm-config /usr/local/etc/php/5.4/php-fpm.conf"
        esac
        ;;
    'gearman' )
        case "$2" in
        'start' )
            sh -c "sudo gearman -d"
        esac
        ;;
    'memcached' )
        case "$2" in
        'start' )
            sh -c "sudo /usr/local/bin/memcached -d"
        esac
        ;;
    'elasticsearch' )
        case "$2" in
        'start' )
            sh -c "sudo elasticsearch -f -D es.config=/usr/local/Cellar/elasticsearch/0.19.8/config/elasticsearch.yml"
        esac
        ;;
    'redis' )
        case "$2" in
        'start' )
            sh -c "sudo redis-server /usr/local/etc/redis.conf"
        esac
       ;;
    *)
        echo "Service $1 is not something I can $2"
        ;;
    esac
}
